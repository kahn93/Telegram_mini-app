# GitHub Actions CI/CD for full stack deployment
# Place this in .github/workflows/deploy.yml

name: Full Stack Deploy

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    env:
      VITE_SUPABASE_URL: ${{ secrets.VITE_SUPABASE_URL }}
      VITE_SUPABASE_ANON_KEY: ${{ secrets.VITE_SUPABASE_ANON_KEY }}
      VITE_TON_API_KEY: ${{ secrets.VITE_TON_API_KEY }}
      VITE_TELEGRAM_BOT_TOKEN: ${{ secrets.VITE_TELEGRAM_BOT_TOKEN }}
      VITE_TON_WALLET_ADDRESS: ${{ secrets.VITE_TON_WALLET_ADDRESS }}
      VITE_JETTON_MASTER_ADDRESS: ${{ secrets.VITE_JETTON_MASTER_ADDRESS }}
      VITE_TELEGRAM_BOT_USERNAME: ${{ secrets.VITE_TELEGRAM_BOT_USERNAME }}
      VITE_API_URL: ${{ secrets.VITE_API_URL }}
    steps:
      - uses: actions/checkout@v4
      - name: Cache node_modules
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
      - name: Install dependencies
        run: npm ci
      - name: Build frontend
        run: npm run build
      - name: Upload production build as artifact
        uses: actions/upload-artifact@v4
        with:
          name: dist-artifact
          path: dist
      - name: Deploy Supabase Edge Functions & Triggers
        run: |
          npm install -g supabase
          ./deploy-supabase.sh
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
      # --- Optional: Deploy to Netlify ---
      # - name: Deploy to Netlify
      #   run: npx netlify deploy --prod --dir=dist --auth ${{ secrets.NETLIFY_AUTH_TOKEN }} --site ${{ secrets.NETLIFY_SITE_ID }}
      #   env:
      #     NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
      #     NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
      # --- Optional: Deploy backend to Render ---
      # - name: Deploy backend to Render
      #   run: git push https://render.com/... main
      #   env:
      #     RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
      # --- Optional: Slack notification on failure ---
      - name: Notify Slack on failure
        if: failure()
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
